// Mocks generated by Mockito 5.4.4 from annotations
// in recipesoup/test/integration/url_import_integration_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:recipesoup/models/recipe_analysis.dart' as _i3;
import 'package:recipesoup/services/openai_service.dart' as _i5;
import 'package:recipesoup/services/url_scraper_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeScrapedContent_0 extends _i1.SmartFake
    implements _i2.ScrapedContent {
  _FakeScrapedContent_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRecipeAnalysis_1 extends _i1.SmartFake
    implements _i3.RecipeAnalysis {
  _FakeRecipeAnalysis_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UrlScraperService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUrlScraperService extends _i1.Mock implements _i2.UrlScraperService {
  MockUrlScraperService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ScrapedContent> scrapeRecipeFromUrl(String? url) =>
      (super.noSuchMethod(
        Invocation.method(
          #scrapeRecipeFromUrl,
          [url],
        ),
        returnValue: _i4.Future<_i2.ScrapedContent>.value(_FakeScrapedContent_0(
          this,
          Invocation.method(
            #scrapeRecipeFromUrl,
            [url],
          ),
        )),
      ) as _i4.Future<_i2.ScrapedContent>);
}

/// A class which mocks [OpenAiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockOpenAiService extends _i1.Mock implements _i5.OpenAiService {
  MockOpenAiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i3.RecipeAnalysis> analyzeImage(
    String? imageData, {
    _i5.LoadingProgressCallback? onProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #analyzeImage,
          [imageData],
          {#onProgress: onProgress},
        ),
        returnValue: _i4.Future<_i3.RecipeAnalysis>.value(_FakeRecipeAnalysis_1(
          this,
          Invocation.method(
            #analyzeImage,
            [imageData],
            {#onProgress: onProgress},
          ),
        )),
      ) as _i4.Future<_i3.RecipeAnalysis>);

  @override
  _i4.Future<_i3.RecipeAnalysis> analyzeText(
    String? blogText, {
    _i5.LoadingProgressCallback? onProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #analyzeText,
          [blogText],
          {#onProgress: onProgress},
        ),
        returnValue: _i4.Future<_i3.RecipeAnalysis>.value(_FakeRecipeAnalysis_1(
          this,
          Invocation.method(
            #analyzeText,
            [blogText],
            {#onProgress: onProgress},
          ),
        )),
      ) as _i4.Future<_i3.RecipeAnalysis>);

  @override
  _i4.Future<bool> checkApiHealth() => (super.noSuchMethod(
        Invocation.method(
          #checkApiHealth,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
