// Mocks generated by Mockito 5.4.4 from annotations
// in recipesoup/test/unit/providers/recipe_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:recipesoup/models/mood.dart' as _i5;
import 'package:recipesoup/models/recipe.dart' as _i4;
import 'package:recipesoup/services/hive_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [HiveService].
///
/// See the documentation for Mockito's code generation for more information.
class MockHiveService extends _i1.Mock implements _i2.HiveService {
  MockHiveService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveRecipe(_i4.Recipe? recipe) => (super.noSuchMethod(
        Invocation.method(
          #saveRecipe,
          [recipe],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i4.Recipe?> getRecipe(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getRecipe,
          [id],
        ),
        returnValue: _i3.Future<_i4.Recipe?>.value(),
      ) as _i3.Future<_i4.Recipe?>);

  @override
  _i3.Future<void> updateRecipe(_i4.Recipe? recipe) => (super.noSuchMethod(
        Invocation.method(
          #updateRecipe,
          [recipe],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteRecipe(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteRecipe,
          [id],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.Recipe>> getAllRecipes() => (super.noSuchMethod(
        Invocation.method(
          #getAllRecipes,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Recipe>>.value(<_i4.Recipe>[]),
      ) as _i3.Future<List<_i4.Recipe>>);

  @override
  _i3.Future<void> saveRecipes(List<_i4.Recipe>? recipes) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveRecipes,
          [recipes],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<int> getRecipesCount() => (super.noSuchMethod(
        Invocation.method(
          #getRecipesCount,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<List<_i4.Recipe>> getRecipesByDateRange(
    DateTime? startDate,
    DateTime? endDate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecipesByDateRange,
          [
            startDate,
            endDate,
          ],
        ),
        returnValue: _i3.Future<List<_i4.Recipe>>.value(<_i4.Recipe>[]),
      ) as _i3.Future<List<_i4.Recipe>>);

  @override
  _i3.Future<List<_i4.Recipe>> getPastTodayRecipes(DateTime? today) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPastTodayRecipes,
          [today],
        ),
        returnValue: _i3.Future<List<_i4.Recipe>>.value(<_i4.Recipe>[]),
      ) as _i3.Future<List<_i4.Recipe>>);

  @override
  _i3.Future<List<_i4.Recipe>> getRecipesByMood(_i5.Mood? mood) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecipesByMood,
          [mood],
        ),
        returnValue: _i3.Future<List<_i4.Recipe>>.value(<_i4.Recipe>[]),
      ) as _i3.Future<List<_i4.Recipe>>);

  @override
  _i3.Future<Map<_i5.Mood, int>> getMoodDistribution() => (super.noSuchMethod(
        Invocation.method(
          #getMoodDistribution,
          [],
        ),
        returnValue: _i3.Future<Map<_i5.Mood, int>>.value(<_i5.Mood, int>{}),
      ) as _i3.Future<Map<_i5.Mood, int>>);

  @override
  _i3.Future<List<_i4.Recipe>> searchRecipesByTag(String? tag) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchRecipesByTag,
          [tag],
        ),
        returnValue: _i3.Future<List<_i4.Recipe>>.value(<_i4.Recipe>[]),
      ) as _i3.Future<List<_i4.Recipe>>);

  @override
  _i3.Future<List<_i4.Recipe>> searchRecipesByTags(List<String>? tags) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchRecipesByTags,
          [tags],
        ),
        returnValue: _i3.Future<List<_i4.Recipe>>.value(<_i4.Recipe>[]),
      ) as _i3.Future<List<_i4.Recipe>>);

  @override
  _i3.Future<Map<String, int>> getTagFrequency() => (super.noSuchMethod(
        Invocation.method(
          #getTagFrequency,
          [],
        ),
        returnValue: _i3.Future<Map<String, int>>.value(<String, int>{}),
      ) as _i3.Future<Map<String, int>>);

  @override
  _i3.Future<List<_i4.Recipe>> searchRecipesByTitle(String? keyword) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchRecipesByTitle,
          [keyword],
        ),
        returnValue: _i3.Future<List<_i4.Recipe>>.value(<_i4.Recipe>[]),
      ) as _i3.Future<List<_i4.Recipe>>);

  @override
  _i3.Future<List<_i4.Recipe>> searchRecipesByEmotionalStory(String? keyword) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchRecipesByEmotionalStory,
          [keyword],
        ),
        returnValue: _i3.Future<List<_i4.Recipe>>.value(<_i4.Recipe>[]),
      ) as _i3.Future<List<_i4.Recipe>>);

  @override
  _i3.Future<List<_i4.Recipe>> getFavoriteRecipes() => (super.noSuchMethod(
        Invocation.method(
          #getFavoriteRecipes,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Recipe>>.value(<_i4.Recipe>[]),
      ) as _i3.Future<List<_i4.Recipe>>);

  @override
  _i3.Future<void> clearAllRecipes() => (super.noSuchMethod(
        Invocation.method(
          #clearAllRecipes,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
